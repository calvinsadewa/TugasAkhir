all_txt = """-0.6	0.3	0.3	0.5	0.5	-0.1	-0.5	0.4	0.4	-	0.1	0.3	2/1/1998	3/4/1998	4/1/1998	5/2/1998	6/1/1998	7/2/1998	8/1/1998	9/1/1998	10/2/1998	11/1/1998	12/2/1998	1/1/1999
-0.6	0.2	0.5	0.4	0.3	-0.1	-0.6	0.3	0.4	-0.1	0.1	0.2	2/1/1999	3/4/1999	4/1/1999	5/2/1999	6/1/1999	7/2/1999	8/1/1999	9/1/1999	10/2/1999	11/1/1999	12/2/1999	1/1/2000
-0.9	0.3	0.2	0.3	0.3	0.1	-0.5	-	0.8	-	0.2	-	2/1/2000	3/3/2000	4/1/2000	5/2/2000	6/1/2000	7/2/2000	8/1/2000	9/1/2000	10/2/2000	11/1/2000	12/2/2000	1/1/2001
-0.9	0.3	0.3	0.6	0.8	0.2	-0.8	0.4	0.3	-0.2	-0.2	0.3	2/1/2001	3/4/2001	4/1/2001	5/2/2001	6/1/2001	7/2/2001	8/1/2001	9/1/2001	10/2/2001	11/1/2001	12/2/2001	1/1/2002
-0.3	0.1	0.4	0.4	0.2	 -	-0.3	0.3	0.3	0.2	 -	0.4	2/1/2002	3/4/2002	4/1/2002	5/2/2002	6/1/2002	7/2/2002	8/1/2002	9/1/2002	10/2/2002	11/1/2002	12/2/2002	1/1/2003
-0.6	0.4	0.4	0.3	 -	-0.2	-0.1	0.4	0.3	0.1	 -	0.3	2/1/2003	3/4/2003	4/1/2003	5/2/2003	6/1/2003	7/2/2003	8/1/2003	9/1/2003	10/2/2003	11/1/2003	12/2/2003	1/1/2004
-0.5	0.2	0.2	0.4	0.4	 -	-0.3	0.3	0.1	0.3	0.2	0.5	2/1/2004	3/3/2004	4/1/2004	5/2/2004	6/1/2004	7/2/2004	8/1/2004	9/1/2004	10/2/2004	11/1/2004	12/2/2004	1/1/2005
-0.5	0.3	0.4	0.4	0.3	 -	0.1	0.3	0.1	0.2	 -	0.3	2/1/2005	3/4/2005	4/1/2005	5/2/2005	6/1/2005	7/2/2005	8/1/2005	9/1/2005	10/2/2005	11/1/2005	12/2/2005	1/1/2006
-0.5	0.3	0.2	0.6	0.5	0.3	-0.1	0.4	0.1	0.2	0.3	0.6	2/1/2006	3/4/2006	4/1/2006	5/2/2006	6/1/2006	7/2/2006	8/1/2006	9/1/2006	10/2/2006	11/1/2006	12/2/2006	1/1/2007
-0.8	0.4	0.5	0.3	0.3	0.2	-0.6	0.4	0.1	0.5	0.3	0.6	2/1/2007	3/4/2007	4/1/2007	5/2/2007	6/1/2007	7/2/2007	8/1/2007	9/1/2007	10/2/2007	11/1/2007	12/2/2007	1/1/2008
-0.7	0.7	0.4	0.8	0.6	0.7	 -	0.6	0.5	-0.2	-0.1	-0.4	2/1/2008	3/3/2008	4/1/2008	5/2/2008	6/1/2008	7/2/2008	8/1/2008	9/1/2008	10/2/2008	11/1/2008	12/2/2008	1/1/2009
-0.7	0.9	0.2	0.2	0.6	0.3	 -	0.4	 -	0.2	0.3	0.6	2/1/2009	3/4/2009	4/1/2009	5/2/2009	6/1/2009	7/2/2009	8/1/2009	9/1/2009	10/2/2009	11/1/2009	12/2/2009	1/1/2010
-0.2	0.4	0.6	0.6	0.2	0.1	-0.2	0.5	 -	0.3	0.4	1.0	2/1/2010	3/4/2010	4/1/2010	5/2/2010	6/1/2010	7/2/2010	8/1/2010	9/1/2010	10/2/2010	11/1/2010	12/2/2010	1/1/2011
0.1	0.7	0.3	1.0	0.2	-0.1	 -	0.6	0.6	0.1	0.2	0.4	2/1/2011	3/4/2011	4/1/2011	5/2/2011	6/1/2011	7/2/2011	8/1/2011	9/1/2011	10/2/2011	11/1/2011	12/2/2011	1/1/2012
-0.5	0.6	0.3	0.6	-0.1	-0.4	0.1	0.5	0.4	0.5	0.2	0.5	2/1/2012	3/3/2012	4/1/2012	5/2/2012	6/1/2012	7/2/2012	8/1/2012	9/1/2012	10/2/2012	11/1/2012	12/2/2012	1/1/2013
-0.5	0.7	0.3	0.2	0.2	-0.2	 -	0.4	0.4	0.1	0.1	0.4	2/1/2013	3/4/2013	4/1/2013	5/2/2013	6/1/2013	7/2/2013	8/1/2013	9/1/2013	10/2/2013	11/1/2013	12/2/2013	1/1/2014
-0.6	0.5	0.2	0.4	-0.1	0.2	-0.3	0.4	 -	0.1	-0.3	 -	2/1/2014	3/4/2014	4/1/2014	5/2/2014	6/1/2014	7/2/2014	8/1/2014	9/1/2014	10/2/2014	11/1/2014	12/2/2014	1/1/2015
-0.9	0.3	0.2	0.2	0.2	 -	-0.2	0.2	-0.1	0.1	 -	0.1	2/1/2015	3/4/2015	4/1/2015	5/2/2015	6/1/2015	7/2/2015	8/1/2015	9/1/2015	10/2/2015	11/1/2015	12/2/2015	1/1/2016
-0.8	0.2	0.4	0.1	0.2	0.2	-0.1	0.3	0.2	0.1	0.2	0.5	2/1/2016	3/3/2016	4/1/2016	5/2/2016	6/1/2016	7/2/2016	8/1/2016	9/1/2016	10/2/2016	11/1/2016	12/2/2016	1/1/2017
-0.5	0.7	0.4	..	..	..	..	..	..	..	..	..	2/1/2017	3/4/2017	4/1/2017	5/2/2017	6/1/2017	7/2/2017	8/1/2017	9/1/2017	10/2/2017	11/1/2017	12/2/2017	1/1/2018"""

from datetime import date
from timeseries_db import TimeseriesDB
from decimal import Decimal

lines = all_txt.split('\n')

dates = sum([line.split('\t')[12:] for line in lines], [])
values = sum([line.split('\t')[:12] for line in lines], [])

tdb = TimeseriesDB()

def is_number(s):
    try:
        float(s)
        return True
    except ValueError:
        return False

date_and_values = [(date,value) for date,value in zip(dates,values) if is_number(value)]

def transform(d):
    bulan,hari,tahun = d[0].split('/')
    tanggal = date(int(tahun[:4]),int(bulan),int(hari))
    return {'date':tanggal,'value':Decimal(d[1])}

db_data = [transform(d) for d in date_and_values]
tdb.create_series('UK_INFLATION',db_data)